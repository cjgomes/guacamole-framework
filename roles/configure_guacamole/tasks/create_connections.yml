---
- name: Create connections in Guacamole
  vars:
    filtered_parent: "{{ connectiongroups_tree.json.childConnectionGroups | selectattr('name', 'equalto', item.connection_group) | map(attribute='identifier') | first }}"
  ansible.builtin.uri:
    url: "{{ guacamole_uri }}/api/session/data/postgresql/connections?token={{ login_token.json.authToken }}"
    method: POST
    body_format: json
    headers:
      Content-Type: "application/json"
    body: "{{ lookup('template', 'templates/' + item.connection_type + 'template.json.j2') }}"
  loop: "{{ connections }}"
  loop_control:
    loop_var: item
  register: result_task
  failed_when:
    - result_task.json.message is defined
    - '"already exists" not in result_task.json.message'

- name: Get connectionGroups tree
  ansible.builtin.uri:
    url: "{{ guacamole_uri }}/api/session/data/postgresql/connectionGroups/ROOT/tree?token={{ login_token.json.authToken }}"
    method: GET
    body_format: json
    headers:
      Content-Type: application/json
  register:
    connectiongroups_tree

#- name: Debug Content
#  ansible.builtin.debug:
#    #msg: "{{ connectiongroups_tree.json.childConnectionGroups | selectattr('name', 'equalto', 'superserver02-ssh') | map(attribute='identifier') }}"
#    msg: >-
#      {{ connectiongroups_tree.json.childConnectionGroups
#      | map(attribute='childConnections') | flatten
#      | selectattr('name', 'equalto', 'superserver02_vnc')
#      | map(attribute='identifier') | first }}

- name: Setting permissions to connections
  vars:
#    filtered_connection_id: "{{ connectiongroups_tree.json.childConnectionGroups | selectattr('name', 'equalto', item.connection_group) | map(attribute='identifier') | first }}"
    filtered_connection_id: >-
      {{ connectiongroups_tree.json.childConnectionGroups
      | map(attribute='childConnections') | flatten
      | selectattr('name', 'equalto', item.name)
      | map(attribute='identifier') | first }}
    filtered_connectiongroup: "{{ item.connection_group }}"
    filtered_usergroup: "{{ vars['connectiongroups'][filtered_connectiongroup]['usergroups'] }}"
  ansible.builtin.uri:
    url: "{{ guacamole_uri }}/api/session/data/postgresql/userGroups/{{ filtered_usergroup | join(', ') }}/permissions?token={{ login_token.json.authToken }}"
    method: PATCH
    body_format: json
    headers:
      Content-Type: "application/json"
    body: |
      [
        {
          "op": "add",
          "path": "/connectionPermissions/{{ filtered_connection_id }}",
          "value": "READ"
        }
      ]
    status_code: [200, 204]
  loop: "{{ connections }}"
  loop_control:
    loop_var: item
